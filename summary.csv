Study,Title,Year,Benchmark Name,Target Topic,Programming Language,Bug Origins,Motivation,Purpose,Vehicle,URL 
S1,Compiling a benchmark of documented multi-threaded bugs,2004,[Eytani et al.],Software Testing,Java,Artificial and Controlled Environment,Absence of data,External,Conference,https://cs.haifa.ac.il/
S2,Extraction of Bug Localization Benchmarks from History,2007,iBUGS,Fault Localization,Java,Production Environment,Lack of real data,External,Conference,https://www.st.cs.uni-saarland.de/ibugs/
S3,Clash of the Titans: Tools and Techniques for Hunting Bugs in Concurrent Programs,2009,[Rungta et al.],Software Testing,Java and C#,Production Environment,Lack of real data,External,Conference,https://vv.cs.byu.edu/vv-lab/concurrency-tool-comparison#access-to-the-multi-threaded-programs
S4,(Un-)Covering Equivalent Mutants,2010,JAVALANCHE Subject Programs,Software Testing,Java,Artificial,Spontaneously-provided results data,Internal,Conference,http://www.javalanche.org/
S5,Empirical Evaluation of Bug Linking,2013,[Bissyand茅 et al.],Bug Diagnosis,Language Independent,Production Environment,Lack of specialized data,External,Conference,http://momentum.labri.fr/bugLinking/
S6,The Eclipse and Mozilla Defect Tracking Dataset: A Genuine Dataset for Mining Bug Information,2013,Eclipse and Mozilla Defect Tracking Dataset,Bug Diagnosis,Language Independent,Production Environment,Lack of real data,External,Conference,https://github.com/ansymo/msr2013-bug_dataset
S7,42 Variability Bugs in the Linux Kernel: A Qualitative Analysis,2014,The Variability Bugs Database,Bug Diagnosis,C,Production Environment,Lack of bug understanding,Internal,Conference,http://vbdb.itu.dk/
S8,Defects4J: A Database of Existing Faults to Enable Controlled Testing Studies for Java Programs,2014,Defects4J,Software Testing,Java,Production Environment,Lack of real data,External,Conference,http://defects4j.org
S9,On the Effectiveness of Information Retrieval Based Bug Localization for C Programs,2014,[Saha et al.],Fault Localization,C,Production Environment,Lack of specialized data,Internal,Conference,https://utexas.app.box.com/icsme2014-dataset
S10,Automated Bug Finding in Video Games: A Case Study for Runtime Monitoring,2014,[Varvaressos et al.],Bug Diagnosis,Language Independent,Production Environment,Spontaneously-provided results data,Internal,Conference,https://github.com/kimlavoie/BeepBeepPingus
S11,A Dataset of High Impact Bugs: Manually-Classified Issue Reports,2015,High Impact Bug Dataset,Bug Diagnosis,Language Independent,Production Environment,Lack of bug understanding,External,Conference,http://oss.sys.wakayama-u.ac.jp/?p=1009
S12,The ManyBugs and IntroClass Benchmarks for Automated Repair of C Programs,2015,ManyBugs and IntroClass,Program Repair,C,Production and Controlled Environment,Lack of specialized data,External,Journal,https://repairbenchmarks.cs.umass.edu/
S13,TaxDC: A Taxonomy of Non-Deterministic Concurrency Bugs in Datacenter Distributed Systems,2016,TaxDC,Software Testing,Language Independent,Production Environment,Lack of real data,External,Conference,http://ucare.cs.uchicago.edu/projects/cbs/
S14,A Feasibility Study of Using Automated Program Repair for Introductory Programming Assignments,2017,[Yi et al.],Program Repair,C,Controlled Environment,Lack of specialized data,Internal,Conference,https://github.com/jyi/ITSP
S15,Automatic detection and demonstrator generation for information 铿俹w leaks in object-oriented programs,2017,KEG Experiments,Software Testing,Java,Production Environment,Lack of specialized data,Internal,Journal,https://www.informatik.tu-darmstadt.de/se/se_research/se_projects/albia/albia_tools/keg.de.jsp
S16,Codeflaws: A Programming Competition Benchmark for Evaluating Automated Program Repair Tools,2017,CodeFlaws,Program Repair,C,Controlled Environment,Lack of specialized data,External,Conference,http://codeflaws.github.io/
S17,ELIXIR : Effective Object-Oriented Program Repair,2017,Bugs.jar,Program Repair,Java,Production Environment,Lack of specialized data,Internal,Conference,https://github.com/bugs-dot-jar/bugs-dot-jar
S18,How Developers Debug Software The DBGBENCH Dataset,2017,DBGBENCH,Bug Diagnosis,C,Production Environment,Lack of bug understanding,External,Conference,http://www.st.cs.uni-saarland.de/debugging/dbgbench/
S19,QuixBugs: a multi-lingual program repair benchmark set based on the quixey challenge,2017,QuixBugs,Program Repair,Python and Java,Controlled Environment,Lack of specialized data,External,Conference,https://github.com/jkoppel/QuixBugs
S20,SECBENCH: A Database of Real Security Vulnerabilities,2017,Secbench,Software Testing,"PHP, C, Ruby, Python, Java, JavaScript, ObjC, C++, ObjC++, Scala, Groovy, Swift",Production Environment,Lack of bug understanding,External,Conference,https://tqrg.github.io/secbench/
S21,Crashing Simulated Planes is Cheap: Can Simulation Detect Robotics Bugs Early?,2018,ArduBugs,Bug Diagnosis,Language Independent,Production Environment,Lack of specialized data,External,Conference,https://github.com/squaresLab/ArduBugs
S22,Large-Scale Analysis of Framework-Specific Exceptions in Android Apps,2018,Dataset Crash Analysis,Software Testing,Android,Production Environment,Lack of real data,External,Conference,https://crashanalysis.github.io/Dataset-CrashAnalysis.html
S23,Mining repair model for exception-related bug,2018,Exception-related bugs,Program Repair,Java,Production Environment,Lack of bug understanding,External,Journal,https://github.com/drzhonghao/exception.bugs
S24,Pairika - A Failure Diagnosis Benchmark for C++ Programs,2018,Pairika,Fault Localization,C++,Production Environment,Lack of specialized data,External,Conference,https://github.com/tum-i22/Pairika
S25,Repairing Crashes in Android Apps,2018,Droixbench,Program Repair,Android,Production Environment,Lack of specialized data,Internal,Conference,https://droix2017.github.io/
